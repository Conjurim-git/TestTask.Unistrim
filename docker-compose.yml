version: '3.8'

services:
  transactionapi:
    image: transactionapi
    build:
      context: .
      dockerfile: TestTask.Unistrim.Api/Dockerfile
      args:
        - configuration=Debug
    ports:
      - 5044:80
    depends_on:
      db:
        condition: service_healthy
      jaeger:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Database=MyDatabase;Username=postgres;Password=postgres
      - ASPNETCORE_URLS=http://+:80
      - Etcd__Endpoint=http://etcd:2379  # Добавляем endpoint для etcd
    networks:
      - network

  db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=MyDatabase
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - network
  
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"  # UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
      - "14250:14250"  # Model
      - "14268:14268"  # Jaeger HTTP
      - "6831:6831/udp"  # Jaeger thrift
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - network
  
#  migration-runner:
#    build:
#      context: .
#      dockerfile: TestTask.Unistrim.MigrationRunner/Dockerfile
#    environment:
#      ConnectionStrings__DefaultConnection: Host=db;Database=MyDatabase;Username=postgres;Password=postgres
#    command: >
#      /bin/bash -c "
#        sleep 10 &&
#        dotnet TestTask.Unistrim.MigrationRunner.dll"
#    depends_on:
#      db:
#        condition: service_healthy
#    networks:
#      - network
      
  
volumes:
  postgres_data:

networks:
  network:
    driver: bridge